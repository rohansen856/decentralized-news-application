version: '3.8'

services:
  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: news_app_nginx
    ports:
      - "80:80"
      - "8080:8080"  # Health check port
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - flask_app
      - fastapi_app
    networks:
      - news_app_network
    restart: no
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Flask Backend
  flask_app:
    build:
      context: .
      dockerfile: Dockerfile.flask
    container_name: news_app_flask
    env_file: .env
    networks:
      - news_app_network
    restart: no
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # FastAPI Backend
  fastapi_app:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: news_app_fastapi
    env_file: .env
    networks:
      - news_app_network
    restart: no
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: news_app_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - news_app_network
    restart: no
    profiles:
      - monitoring

volumes:
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local

networks:
  news_app_network:
    driver: bridge